### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  author: User!
  createdAt: String!
  id: Int!
  post: Post!
  text: String!
  updatedAt: String!
}

type CommentWithMoreAvailable {
  comments: [Comment]!
  moreAvailable: Boolean!
}

input CreateCommentInputs {
  postId: Int!
  text: String!
}

input CreatePostInputs {
  image: Upload
  title: String!
}

type Like {
  createdAt: String!
  id: Int!
  liker: User!
  post: Post!
  updatedAt: String!
}

input LoginUserInputs {
  email: String!
  password: String!
}

type Mutation {
  createComment(data: CreateCommentInputs!): Comment!
  createPost(data: CreatePostInputs!): Post!
  login(data: LoginUserInputs!): UserWithToken!
  logout: String!
  signup(data: SignupUserInputs!): UserWithToken!
  toggleLike(postId: Int!): Boolean!
  updateCoverImage(image: Upload!): String!
  updateProfile(data: UpdateProfileInput!): User!
  updateProfilePicture(image: Upload!): String!
}

type Post {
  author: User!
  comments: CommentWithMoreAvailable!
  createdAt: String!
  id: Int!
  imageURL: String
  liked: Boolean
  likes: [Like]!
  title: String!
  updatedAt: String!
}

type PostsWithMoreAvailable {
  moreAvailable: Boolean!
  posts: [Post]!
}

type Profile {
  about: String
  coverImageURL: String
  displayName: String!
  imageURL: String
  interests: String
  location: String
  workPlace: String
}

type Query {
  getPostComments(pageNumber: Int!, postId: Int!): CommentWithMoreAvailable!
  getUserById(userId: Int!): User!
  getUserByUsername(username: String!): User!
  getUserPosts(pageNumber: Int!, userId: Int!): PostsWithMoreAvailable!
  me: User!
  searchUsers(pageNo: Int!, query: String!, resultsPerPage: Int!): UsersWithMoreAvailable!
}

input SignupUserInputs {
  email: String!
  password: String!
  username: String!
}

input UpdateProfileInput {
  about: String
  displayName: String
  imageURL: String
  interests: String
  location: String
  workPlace: String
}

scalar Upload

type User {
  createdAt: String!
  email: String!
  id: Int!
  profile: Profile!
  updatedAt: String!
  username: String!
  wallPosts: PostsWithMoreAvailable!
}

type UserWithToken {
  token: String!
  user: User!
}

type UsersWithMoreAvailable {
  moreAvailable: Boolean!
  users: [User]!
}
